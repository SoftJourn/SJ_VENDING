# Spring
# For custom endpoint exception handling
spring:
  # Profile
  profiles:
    active: dev
  # Datasource
  datasource:
    # Database
    url: ${SJ_VENDING_SERVER_DATASOURCE_URL}
    username: ${SJ_VENDING_SERVER_DATASOURCE_USERNAME}
    password: ${SJ_VENDING_SERVER_DATASOURCE_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver
    tomcat:
      test-while-idle: true
      time-between-eviction-runs-millis: 3600000
      validation-query: SELECT 1

  jpa:
    database-platform: org.hibernate.dialect.MySQL5Dialect
    hibernate:
      ddl-auto: validate
      use-new-id-generator-mappings: false
      naming:
        implicit-strategy: org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy
        physical-strategy: org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
  mvc:
    throw-exception-if-no-handler-found: true
  web:
    resources:
      add-mappings: false
  flyway:
    baseline-on-migrate: true
    ignore-future-migration: true
    ignore-missing-migration: true

logging:
  config: file:${SJ_VENDING_SERVER_LOGGING_CONFIG_FILE}

# Coins server

coins:
  server.host: ${SJ_VENDING_SERVER_COINS_SERVER_URL}
  amount.path: /amount
  spent.path: /spent

# Auth
auth:
  server:
    url: ${SJ_VENDING_SERVER_AUTH_SERVER_URL}
  client:
    client-id: ${SJ_VENDING_SERVER_AUTH_CLIENT_ID}
    client-secret: ${SJ_VENDING_SERVER_AUTH_CLIENT_SECRET}

authPublicKeyFile: ${SJ_VENDING_SERVER_AUTH_PUBKEY_PATH}

# Machine
machine.request.signer.keystore:
  file: ${SJ_VENDING_MACHINE_KEYSTORE_PATH}
  password: ${SJ_VENDING_MACHINE_KEYSTORE_PASSWORD}
  alias: ${SJ_VENDING_MACHINE_KEYSTORE_ALIAS}
